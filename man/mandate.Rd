% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mandate.R
\name{mandate}
\alias{mandate}
\title{The mandate() function}
\usage{
mandate(df, schema_df)
}
\arguments{
\item{df}{a data.frame of data whose column types and names will be mandated against a schema}

\item{schema_df}{a data.frame used as a schema to mandate each column in the df argument}
}
\value{
an output data.frame similar to the input 'df' but the column types of 'df' may have been converted according to 'schema_df'
}
\description{
The mandate() function converts each column of the supplied data.frame to the type listed in the supplied schema.
If 'schema_df[j,class_col] == "numeric" ', then 'as.numeric(df[,j])' will be the result.
}
\details{
the schema_df argument should be the output of \code{\link[datzen]{save_df_schema}}.
The schema_df argument should contain 4 columns: ind_col, names_col, class_col, pattern.
The schema_df argument should have nrow(schema_df) == ncol(df).
}
\examples{
iris2=cbind(iris,Species_chr=as.character(iris$Species))
save_df_schema(x=iris2,outdir='~/projects/datzen/tests/')
schema_in = jsonlite::read_json('~/projects/datzen/tests/iris2_schema.json',simplifyVector = TRUE)

library(dplyr)

mandate(iris2,schema_df = schema_in) \%>\% str

iris3 = iris2 \%>\% mutate_all(.funs=funs(as.character))
iris3 \%>\% str

mandate(iris3,schema_df = schema_in) \%>\% str

}
